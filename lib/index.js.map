{"version":3,"sources":["../src/index.js"],"names":["require","logLevel","nodeVersion","process","versions","node","split","major","minor","console","log","exit","updater","pkg","notifier","updateCheckInterval","update","latest","version","old","current","type","chalk","red","yellow","green","notify","message","name","env","ZUS_DIR","resolve","ZUS_VERSION","command","argv","args","slice","nextTick"],"mappings":"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","sourcesContent":["import { dirname } from 'path';\nimport chalk from 'chalk';\nimport helper from './doc/helper';\nimport init from './scripts/init';\n\n// 可以打印fork进程的日志\nrequire('graceful-process')({ logLevel: 'warn' });\n\nconst nodeVersion = process.versions.node;\nconst versions = nodeVersion.split('.');\nconst major = versions[0];\nconst minor = versions[1];\n\nif (major * 10 + minor * 1 < 90) {\n  console.log(`Node version must >= 9.0, but got ${major}.${minor}`);\n  process.exit(1);\n}\n\nconst updater = require('update-notifier');\nconst pkg = require('../package.json');\nconst notifier = updater({ pkg, updateCheckInterval: 1000 * 60 * 60 * 24 * 7 });\nif (notifier.update && notifier.update.latest !== pkg.version) {\n  // 存在新版本\n  const old = notifier.update.current;\n  const latest = notifier.update.latest;\n  let type = notifier.update.type;\n  switch (type) {\n    case 'major':\n      type = chalk.red(type);\n      break;\n    case 'minor':\n      type = chalk.yellow(type);\n      break;\n    case 'patch':\n      type = chalk.green(type);\n      break;\n    default:\n      break;\n  }\n  notifier.notify({\n    message: `New ${type} version of ${pkg.name} available! ${chalk.red(old)} -> ${chalk.green(\n      latest,\n    )}\\nRun ${chalk.green(`npm install -g ${pkg.name}`)} to update!`,\n  });\n}\n\nprocess.env.ZUS_DIR = dirname(require.resolve('../package'));\nprocess.env.ZUS_VERSION = pkg.version;\n\nconst command = process.argv[2];\nconst args = process.argv.slice(3);\n\nprocess.nextTick(() => {\n  switch (command) {\n    case '-v':\n    case '--version':\n      console.log(pkg.version);\n      break;\n    case 'init':\n      if (args[0]) {\n        init(args[0]);\n      } else {\n        helper();\n      }\n      break;\n    case 'build':\n    case 'server':\n    case 'test':\n      /* eslint-disable */\n      require(`./scripts/${command}`);\n      break;\n    default:\n      helper();\n      break;\n  }\n});\n"],"file":"index.js"}