{"version":3,"sources":["../../src/utils/mock.js"],"names":["debug","require","error","paths","process","cwd","configFile","resolveApp","mockDir","getConfig","Object","keys","cache","forEach","file","indexOf","createMockHandler","method","path","value","mockHandler","res","json","createProxy","pathPattern","target","filter","_","req","toLowerCase","parsedUrl","realTarget","protocol","host","join","targetPath","pathRewrite","matchPath","originalUrl","matches","match","length","replace","applyMock","devServer","realApplyMock","e","console","log","outputError","watcher","ignored","ignoreInitial","on","appDirectory","close","config","app","proxyRules","mockRules","key","keyParsed","parseKey","test","RegExp","push","proxy","use","limit","strict","extended","mock","lastIndex","_router","stack","item","index","name","mockAPILength","newStack","splice","persistent","splited","split","filePath","message","relativeFilePath","errors","line","trim","map"],"mappings":"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","sourcesContent":["import { existsSync } from 'fs';\nimport assert from 'assert';\nimport { watch } from 'chokidar';\nimport { green, red } from 'chalk';\nimport proxy from 'http-proxy-middleware';\nimport { parse } from 'url';\nimport { json, urlencoded } from 'body-parser';\n\nimport getPaths from './common/getPaths';\nconst debug = require('debug')('zus:mock');\n\nlet error = null;\nconst paths = getPaths(process.cwd());\nconst configFile = paths.resolveApp('.zus.mock.js');\nconst mockDir = paths.resolveApp('./mock/');\n\nfunction getConfig() {\n  if (existsSync(configFile)) {\n    // disable require cache\n    Object.keys(require.cache).forEach(file => {\n      if (file === configFile || file.indexOf(mockDir) > -1) {\n        debug(`delete cache ${file}`);\n        delete require.cache[file];\n      }\n    });\n    // eslint-disable-next-line global-require,import/no-dynamic-require\n    return require(configFile);\n  } else {\n    return {};\n  }\n}\n\nfunction createMockHandler(method, path, value) {\n  return function mockHandler(...args) {\n    const res = args[1];\n    if (typeof value === 'function') {\n      value(...args);\n    } else {\n      res.json(value);\n    }\n  };\n}\n\nfunction createProxy(method, pathPattern, target) {\n  const filter = (_, req) => {\n    return method ? req.method.toLowerCase() === method.toLowerCase() : true;\n  };\n  const parsedUrl = parse(target);\n  const realTarget = [parsedUrl.protocol, parsedUrl.host].join('//');\n  const targetPath = parsedUrl.path;\n\n  const pathRewrite = (path, req) => {\n    let matchPath = req.originalUrl;\n    const matches = matchPath.match(pathPattern);\n\n    if (matches.length > 1) {\n      matchPath = matches[1];\n    }\n\n    return path.replace(req.originalUrl.replace(matchPath, ''), targetPath);\n  };\n\n  return proxy(filter, { target: realTarget, pathRewrite });\n}\n\nfunction applyMock(devServer) {\n  try {\n    realApplyMock(devServer);\n    error = null;\n  } catch (e) {\n    console.log(e);\n    error = e;\n\n    console.log();\n    outputError();\n\n    const watcher = watch([configFile, mockDir], {\n      ignored: /node_modules/,\n      ignoreInitial: true,\n    });\n    watcher.on('change', path => {\n      console.log(green('CHANGED'), path.replace(paths.appDirectory, '.'));\n      watcher.close();\n      applyMock(devServer);\n    });\n  }\n}\n\nfunction realApplyMock(devServer) {\n  const config = getConfig();\n  const { app } = devServer;\n\n  const proxyRules = [];\n  const mockRules = [];\n\n  Object.keys(config).forEach(key => {\n    const keyParsed = parseKey(key);\n    assert(!!app[keyParsed.method], `method of ${key} is not valid`);\n    assert(\n      typeof config[key] === 'function'\n        || typeof config[key] === 'object'\n        || typeof config[key] === 'string',\n      `mock value of ${key} should be function or object or string, but got ${typeof config[key]}`,\n    );\n    if (typeof config[key] === 'string') {\n      let { path } = keyParsed;\n      if (/\\(.+\\)/.test(path)) {\n        path = new RegExp(`^${path}$`);\n      }\n      proxyRules.push({\n        path,\n        method: keyParsed.method,\n        target: config[key],\n      });\n    } else {\n      mockRules.push({\n        path: keyParsed.path,\n        method: keyParsed.method,\n        target: config[key],\n      });\n    }\n    proxyRules.forEach(proxy => {\n      app.use(proxy.path, createProxy(proxy.method, proxy.path, proxy.target));\n    });\n\n    /**\n     * body-parser must be placed after http-proxy-middleware\n     * https://github.com/chimurai/http-proxy-middleware/blob/master/recipes/modify-post.md\n     */\n    devServer.use(json({ limit: '5mb', strict: false }));\n    devServer.use(\n      urlencoded({\n        extended: true,\n        limit: '5mb',\n      }),\n    );\n\n    mockRules.forEach(mock => {\n      app[mock.method](mock.path, createMockHandler(mock.method, mock.path, mock.target));\n    });\n  });\n\n  // 调整 stack，把 historyApiFallback 放到最后\n  let lastIndex = null;\n  app._router.stack.forEach((item, index) => {\n    if (item.name === 'webpackDevMiddleware') {\n      lastIndex = index;\n    }\n  });\n  const mockAPILength = app._router.stack.length - 1 - lastIndex;\n  if (lastIndex && lastIndex > 0) {\n    const newStack = app._router.stack;\n    newStack.push(newStack[lastIndex - 1]);\n    newStack.push(newStack[lastIndex]);\n    newStack.splice(lastIndex - 1, 2);\n    app._router.stack = newStack;\n  }\n\n  const watcher = watch([configFile, mockDir], {\n    ignored: /node_modules/,\n    persistent: true,\n  });\n  watcher.on('change', path => {\n    console.log(green('CHANGED'), path.replace(paths.appDirectory, '.'));\n    watcher.close();\n\n    // 删除旧的 mock api\n    app._router.stack.splice(lastIndex - 1, mockAPILength);\n    applyMock(devServer);\n  });\n}\n\nfunction parseKey(key) {\n  let method = 'get';\n  let path = key;\n\n  if (key.indexOf(' ') > -1) {\n    const splited = key.split(' ');\n    method = splited[0].toLowerCase();\n    path = splited[1];\n  }\n\n  return { method, path };\n}\n\nfunction outputError() {\n  if (!error) return;\n\n  const filePath = error.message.split(': ')[0];\n  const relativeFilePath = filePath.replace(paths.appDirectory, '.');\n  const errors = error.stack\n    .split('\\n')\n    .filter(line => line.trim().indexOf('at ') !== 0)\n    .map(line => line.replace(`${filePath}: `, ''));\n  errors.splice(1, 0, ['']);\n\n  console.log(red('Failed to parse mock config.'));\n  console.log();\n  console.log(`Error in ${relativeFilePath}`);\n  console.log(errors.join('\\n'));\n  console.log();\n}\n\nexport { applyMock, outputError };\n"],"file":"mock.js"}