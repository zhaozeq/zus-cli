{"version":3,"sources":["../../../src/utils/webpack/weboack-overrides.js"],"names":["macroCheck","RegExp","config","source","test","Object","assign","options","caller","craInvalidationToken","crypto","randomBytes","toString"],"mappings":";;;;;;;;;AAIA;;AAJA;AACA;AACA;AACA;AAGA,IAAMA,UAAU,GAAG,IAAIC,MAAJ,CAAW,WAAX,CAAnB;;AAEe,oBAAW;AACxB,SAAO;AACL;AACAC,IAAAA,MAFK,kBAEEA,OAFF,QAEsB;AAAA,UAAVC,MAAU,QAAVA,MAAU;;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,UAAIH,UAAU,CAACI,IAAX,CAAgBD,MAAhB,CAAJ,EAA6B;AAC3B,eAAOE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,OAAM,CAACK,OAAzB,EAAkC;AACvCC,UAAAA,MAAM,EAAEH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,OAAM,CAACK,OAAP,CAAeC,MAAjC,EAAyC;AAC/CC,YAAAA,oBAAoB,EAAEC,mBAAOC,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC;AADyB,WAAzC;AAD+B,SAAlC,CAAP;AAKD;;AACD,aAAOV,OAAM,CAACK,OAAd;AACD;AAjBI,GAAP;AAmBD","sourcesContent":["/**\n * ref:\n * https://github.com/facebook/create-react-app/blob/master/packages/babel-preset-react-app/webpack-overrides.js\n */\nimport crypto from 'crypto';\n\nconst macroCheck = new RegExp('[./]macro');\n\nexport default function() {\n  return {\n    // This function transforms the Babel configuration on a per-file basis\n    config(config, { source }) {\n      // Babel Macros are notoriously hard to cache, so they shouldn't be\n      // https://github.com/babel/babel/issues/8497\n      // We naively detect macros using their package suffix and add a random token\n      // to the caller, a valid option accepted by Babel, to compose a one-time\n      // cacheIdentifier for the file. We cannot tune the loader options on a per\n      // file basis.\n      if (macroCheck.test(source)) {\n        return Object.assign({}, config.options, {\n          caller: Object.assign({}, config.options.caller, {\n            craInvalidationToken: crypto.randomBytes(32).toString('hex'),\n          }),\n        });\n      }\n      return config.options;\n    },\n  };\n}\n"],"file":"weboack-overrides.js"}