{"version":3,"sources":["../../../src/utils/webpack/build.js"],"names":["WARN_AFTER_BUNDLE_GZIP_SIZE","WARN_AFTER_CHUNK_GZIP_SIZE","build","opts","webpackConfig","cwd","process","onSuccess","onFail","rimraf","sync","output","path","err","stats","hasErrors","exit","console","log","root","sizes"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA,IAAMA,2BAA2B,GAAG,MAAM,IAA1C;AACA,IAAMC,0BAA0B,GAAG,OAAO,IAA1C;;AAEe,SAASC,KAAT,GAA0B;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AAAA,MAC/BC,aAD+B,GAC2BD,IAD3B,CAC/BC,aAD+B;AAAA,kBAC2BD,IAD3B,CAChBE,GADgB;AAAA,MAChBA,GADgB,0BACVC,OAAO,CAACD,GAAR,EADU;AAAA,MACKE,SADL,GAC2BJ,IAD3B,CACKI,SADL;AAAA,MACgBC,MADhB,GAC2BL,IAD3B,CACgBK,MADhB;AAEvC,0BAAOJ,aAAP,EAAsB,mCAAtB;AACA,0BAAO,2BAAcA,aAAd,CAAP,EAAqC,uCAArC,EAHuC,CAKvC;;AACAK,qBAAOC,IAAP,CAAYN,aAAa,CAACO,MAAd,CAAqBC,IAAjC;;AAEA,2BAAQR,aAAR,EAAuB,UAACS,GAAD,EAAMC,KAAN,EAAgB;AACrC,QAAID,GAAG,IAAIC,KAAK,CAACC,SAAN,EAAX,EAA8B;AAC5B,UAAI,OAAOP,MAAP,KAAkB,UAAtB,EAAkC;AAChCA,QAAAA,MAAM,CAAC;AAAEK,UAAAA,GAAG,EAAHA,GAAF;AAAOC,UAAAA,KAAK,EAALA;AAAP,SAAD,CAAN;AACD;;AACDR,MAAAA,OAAO,CAACU,IAAR,CAAa,CAAb;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,oDACEJ,KADF,EAEE;AACEK,MAAAA,IAAI,EAAEf,aAAa,CAACO,MAAd,CAAqBC,IAD7B;AAEEQ,MAAAA,KAAK,EAAE;AAFT,KAFF,EAMEhB,aAAa,CAACO,MAAd,CAAqBC,IANvB,EAOEZ,2BAPF,EAQEC,0BARF;AAUAgB,IAAAA,OAAO,CAACC,GAAR;;AAEA,QAAIX,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAAC;AAAEO,QAAAA,KAAK,EAALA;AAAF,OAAD,CAAT;AACD;AACF,GAxBD;AAyBD","sourcesContent":["import webpack from 'webpack'\nimport rimraf from 'rimraf'\nimport assert from 'assert'\nimport { isPlainObject } from 'lodash'\nimport { printFileSizesAfterBuild } from 'react-dev-utils/FileSizeReporter'\n\n// These sizes are pretty large. We'll warn for bundles exceeding them.\nconst WARN_AFTER_BUNDLE_GZIP_SIZE = 512 * 1024\nconst WARN_AFTER_CHUNK_GZIP_SIZE = 1024 * 1024\n\nexport default function build(opts = {}) {\n  const { webpackConfig, cwd = process.cwd(), onSuccess, onFail } = opts\n  assert(webpackConfig, 'webpackConfig should be supplied.')\n  assert(isPlainObject(webpackConfig), 'webpackConfig should be plain object.')\n\n  // 清空build文件\n  rimraf.sync(webpackConfig.output.path)\n\n  webpack(webpackConfig, (err, stats) => {\n    if (err || stats.hasErrors()) {\n      if (typeof onFail === 'function') {\n        onFail({ err, stats })\n      }\n      process.exit(1)\n    }\n\n    console.log('File sizes after gzip:\\n')\n    printFileSizesAfterBuild(\n      stats,\n      {\n        root: webpackConfig.output.path,\n        sizes: {}\n      },\n      webpackConfig.output.path,\n      WARN_AFTER_BUNDLE_GZIP_SIZE,\n      WARN_AFTER_CHUNK_GZIP_SIZE\n    )\n    console.log()\n\n    if (onSuccess) {\n      onSuccess({ stats })\n    }\n  })\n}\n"],"file":"build.js"}