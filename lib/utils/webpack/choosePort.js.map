{"version":3,"sources":["../../../src/utils/webpack/choosePort.js"],"names":["isInteractive","process","stdout","isTTY","choosePort","defaultPort","env","DETECT_PORT","Promise","resolve","then","port","message","platform","existingProcess","question","type","name","chalk","yellow","inquirer","prompt","answer","shouldChangePort","console","log","red","err","Error"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAD8B;AAG9B,IAAMA,aAAa,GAAGC,OAAO,CAACC,MAAR,CAAeC,KAArC,C,CAA4C;;AAE7B,SAASC,UAAT,CAAoBC,WAApB,EAAiC;AAC9C,MAAIJ,OAAO,CAACK,GAAR,CAAYC,WAAZ,KAA4B,MAAhC,EAAwC;AACtC,WAAOC,OAAO,CAACC,OAAR,CAAgBJ,WAAhB,CAAP;AACD;;AAED,SAAO,4BAAOA,WAAP,EAAoBK,IAApB,CACL,UAAAC,IAAI;AAAA,WAAI,IAAIH,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC3B,UAAIE,IAAI,KAAKN,WAAb,EAA0B;AACxB,eAAOI,OAAO,CAACE,IAAD,CAAd;AACD;;AACD,UAAMC,OAAO,GAAGX,OAAO,CAACY,QAAR,KAAqB,OAArB,IAAgCR,WAAW,GAAG,IAA9C,IAAsD,CAAC,yBAAvD,2HAE8BA,WAF9B,MAAhB;;AAGA,UAAIL,aAAJ,EAAmB;AACjB;AACA,YAAMc,eAAe,GAAG,mCAAkBT,WAAlB,CAAxB,CAFiB,CAEuC;;AACxD,YAAMU,QAAQ,GAAG;AACfC,UAAAA,IAAI,EAAE,SADS;AAEfC,UAAAA,IAAI,EAAE,kBAFS;AAGfL,UAAAA,OAAO,YAAKM,kBAAMC,MAAN,kBAERL,eAAe,CAAC;AAAD,oCACMA,eADN,IAEX,EAJI,EAAL,+DAHQ;AAUf,qBAAS;AAVM,SAAjB;;AAYAM,6BAASC,MAAT,CAAgBN,QAAhB,EAA0BL,IAA1B,CAA+B,UAAAY,MAAM,EAAI;AACvC,cAAIA,MAAM,CAACC,gBAAX,EAA6B;AAC3Bd,YAAAA,OAAO,CAACE,IAAD,CAAP;AACD,WAFD,MAEO;AACLF,YAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,SAND;AAOD,OAtBD,MAsBO;AACLe,QAAAA,OAAO,CAACC,GAAR,CAAYP,kBAAMQ,GAAN,CAAUd,OAAV,CAAZ;AACAH,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KAjCK,CAAJ;AAAA,GADC,EAmCL,UAAAkB,GAAG,EAAI;AACL,UAAM,IAAIC,KAAJ,CACJV,kBAAMQ,GAAN,gEAAkEC,GAAG,CAACf,OAAJ,IAAee,GAAjF,QADI,CAAN;AAGD,GAvCI,CAAP;AAyCD","sourcesContent":["import detect from 'detect-port';\nimport getProcessForPort from 'react-dev-utils/getProcessForPort';\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport isRoot from 'is-root'; // 检查进程是否以提升的权限运行\nimport clearConsole from '../common/clearConsole';\n\nconst isInteractive = process.stdout.isTTY; // 判断Node.js是否运行在TTY上下文\n\nexport default function choosePort(defaultPort) {\n  if (process.env.DETECT_PORT === 'none') {\n    return Promise.resolve(defaultPort);\n  }\n\n  return detect(defaultPort).then(\n    port => new Promise(resolve => {\n        if (port === defaultPort) {\n          return resolve(port);\n        }\n        const message = process.platform !== 'win32' && defaultPort < 1024 && !isRoot()\n            ? `Admin permissions are required to run a server on a port below 1024.`\n            : `Something is already running on port ${defaultPort}.`;\n        if (isInteractive) {\n          clearConsole();\n          const existingProcess = getProcessForPort(defaultPort); // 是否存在进程占用端口\n          const question = {\n            type: 'confirm',\n            name: 'shouldChangePort',\n            message: `${chalk.yellow(\n              `message${\n                existingProcess // eslint-disable-line\n                  ? ` Probably:\\n  ${existingProcess}`\n                  : ''\n              }`,\n            )}\\n\\nWould you like to run the app on another port instead?`,\n            default: true,\n          };\n          inquirer.prompt(question).then(answer => {\n            if (answer.shouldChangePort) {\n              resolve(port);\n            } else {\n              resolve(null);\n            }\n          });\n        } else {\n          console.log(chalk.red(message));\n          resolve(null);\n        }\n      }),\n    err => {\n      throw new Error(\n        chalk.red(`Could not find an open port.\\nNetwork error message: ${err.message || err}\\n`),\n      );\n    },\n  );\n}\n"],"file":"choosePort.js"}