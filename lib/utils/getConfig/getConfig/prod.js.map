{"version":3,"sources":["../../../../src/utils/getConfig/getConfig/prod.js"],"names":["mergeConfig","config","userConfig","webpackConfig","opts","disableCompress","process","env","COMPRESS","mode","devtool","__FROM_UMI_TEST","output","pathinfo","optimization","namedModules","namedChunks","hash","filename","chunkFilename","performance","hints","manifest","plugin","use","require","fileName","noEmitOnErrors","minimize","minimizerName","minimizerPlugin","UglifyPlugin","minimizerOptions","uglifyOptions","sourceMap","uglifyJSOptions","minimizer","TerserPlugin","terserOptions","terserJSOptions"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,UAA7B,EAAyC;AACvC,MAAI,OAAOA,UAAP,KAAsB,UAA1B,EAAsC;AACpC,WAAOA,UAAU,CAACD,MAAD,CAAjB;AACD,GAFD,MAEO,IAAI,2BAAcC,UAAd,CAAJ,EAA+B;AACpC,2CACKD,MADL,GAEKC,UAFL;AAID,GALM,MAKA;AACL,WAAOD,MAAP;AACD;AACF;;AAEc,kBAASE,aAAT,EAAwBC,IAAxB,EAA8B;AAC3C,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAjD;AAEAL,EAAAA,aAAa,CAACM,IAAd,CAAmB,YAAnB,EAAiCC,OAAjC,CAAyCN,IAAI,CAACM,OAA9C;;AAEA,MAAIL,eAAe,IAAI,CAACC,OAAO,CAACC,GAAR,CAAYI,eAApC,EAAqD;AACnDR,IAAAA,aAAa,CAACS,MAAd,CAAqBC,QAArB,CAA8B,IAA9B;AACAV,IAAAA,aAAa,CAACW,YAAd,CAA2BC,YAA3B,CAAwC,IAAxC,EAA8CC,WAA9C,CAA0D,IAA1D;AACD;;AAED,MAAIZ,IAAI,CAACa,IAAT,EAAe;AACbd,IAAAA,aAAa,CAACS,MAAd,CACGM,QADH,8BAEGC,aAFH;AAGD;;AAEDhB,EAAAA,aAAa,CAACiB,WAAd,CAA0BC,KAA1B,CAAgC,KAAhC;;AAEA,MAAIjB,IAAI,CAACkB,QAAT,EAAmB;AACjBnB,IAAAA,aAAa,CAACoB,MAAd,CAAqB,UAArB,EAAiCC,GAAjC,CAAqCC,OAAO,CAAC,yBAAD,CAA5C,EAAyE;AAErEC,MAAAA,QAAQ,EAAE;AAF2D,OAGlEtB,IAAI,CAACkB,QAH6D,EAAzE;AAMD;;AAEDnB,EAAAA,aAAa,CAACW,YAAd,CACE;AADF,GAEGa,cAFH,CAEkB,IAFlB;;AAIA,MAAItB,eAAe,IAAIC,OAAO,CAACC,GAAR,CAAYI,eAAnC,EAAoD;AAClDR,IAAAA,aAAa,CAACW,YAAd,CAA2Bc,QAA3B,CAAoC,KAApC;AACD,GAFD,MAEO;AACLzB,IAAAA,aAAa,CAACoB,MAAd,CAAqB,iBAArB,EAAwCC,GAAxC,CAA4CC,OAAO,CAAC,mCAAD,CAAnD;AAEA,QAAII,aAAa,GAAG,UAApB;AACA,QAAIC,eAAe,GAAGC,iCAAtB;AACA,QAAIC,gBAAgB,GAAG,CACrBhC,WAAW,iCAEJiC,yBAFI;AAGPC,MAAAA,SAAS,EAAE,CAAC,CAAC9B,IAAI,CAACM;AAHX,QAKTN,IAAI,CAAC+B,eALI,CADU,CAAvB;;AAUA,QAAI/B,IAAI,CAACgC,SAAL,KAAmB,UAAvB,EAAmC;AACjCP,MAAAA,aAAa,GAAG,UAAhB;AACAC,MAAAA,eAAe,GAAGO,+BAAlB;AACAL,MAAAA,gBAAgB,GAAG,CACjBhC,WAAW,iCAEJsC,yBAFI;AAGPJ,QAAAA,SAAS,EAAE,CAAC,CAAC9B,IAAI,CAACM;AAHX,UAKTN,IAAI,CAACmC,eALI,CADM,CAAnB;AASD;;AAEDpC,IAAAA,aAAa,CAACW,YAAd,CAA2BsB,SAA3B,CAAqCP,aAArC,EAAoDL,GAApD,CAAwDM,eAAxD,EAAyEE,gBAAzE;AACD;AACF","sourcesContent":["/* eslint-disable global-require */\nimport TerserPlugin from 'terser-webpack-plugin';\nimport UglifyPlugin from 'uglifyjs-webpack-plugin';\nimport { isPlainObject } from 'lodash';\nimport terserOptions from './terserOptions';\nimport uglifyOptions from './uglifyOptions';\n\nfunction mergeConfig(config, userConfig) {\n  if (typeof userConfig === 'function') {\n    return userConfig(config);\n  } else if (isPlainObject(userConfig)) {\n    return {\n      ...config,\n      ...userConfig,\n    };\n  } else {\n    return config;\n  }\n}\n\nexport default function(webpackConfig, opts) {\n  const disableCompress = process.env.COMPRESS === 'none';\n\n  webpackConfig.mode('production').devtool(opts.devtool);\n\n  if (disableCompress && !process.env.__FROM_UMI_TEST) {\n    webpackConfig.output.pathinfo(true);\n    webpackConfig.optimization.namedModules(true).namedChunks(true);\n  }\n\n  if (opts.hash) {\n    webpackConfig.output\n      .filename(`[name].[contenthash:8].js`)\n      .chunkFilename(`[name].[contenthash:8].async.js`);\n  }\n\n  webpackConfig.performance.hints(false);\n\n  if (opts.manifest) {\n    webpackConfig.plugin('manifest').use(require('webpack-manifest-plugin'), [\n      {\n        fileName: 'asset-manifest.json',\n        ...opts.manifest,\n      },\n    ]);\n  }\n\n  webpackConfig.optimization\n    // don't emit files if have error\n    .noEmitOnErrors(true);\n\n  if (disableCompress || process.env.__FROM_UMI_TEST) {\n    webpackConfig.optimization.minimize(false);\n  } else {\n    webpackConfig.plugin('hash-module-ids').use(require('webpack/lib/HashedModuleIdsPlugin'));\n\n    let minimizerName = 'uglifyjs';\n    let minimizerPlugin = UglifyPlugin;\n    let minimizerOptions = [\n      mergeConfig(\n        {\n          ...uglifyOptions,\n          sourceMap: !!opts.devtool,\n        },\n        opts.uglifyJSOptions,\n      ),\n    ];\n\n    if (opts.minimizer === 'terserjs') {\n      minimizerName = 'terserjs';\n      minimizerPlugin = TerserPlugin;\n      minimizerOptions = [\n        mergeConfig(\n          {\n            ...terserOptions,\n            sourceMap: !!opts.devtool,\n          },\n          opts.terserJSOptions,\n        ),\n      ];\n    }\n\n    webpackConfig.optimization.minimizer(minimizerName).use(minimizerPlugin, minimizerOptions);\n  }\n}\n"],"file":"prod.js"}