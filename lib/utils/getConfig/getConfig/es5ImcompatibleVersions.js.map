{"version":3,"sources":["../../../../src/utils/getConfig/getConfig/es5ImcompatibleVersions.js"],"names":["pkgPathCache","pkgCache","require","config","getPkgPath","filePath","dir","pkgUp","sync","shouldTransform","pkgPath","name","version","isMatch","Object","keys","some","sv"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,YAAY,GAAG,EAArB;AACA,IAAMC,QAAQ,GAAG,EAAjB;;eAGIC,OAAO,CAAC,wCAAD,C;IAD8BC,M,YAAvCA,M,CAAU,2B;;AAGL,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AACnC,MAAMC,GAAG,GAAG,mBAAQD,QAAR,CAAZ;AACA,MAAIC,GAAG,IAAIN,YAAX,EAAyB,OAAOA,YAAY,CAACM,GAAD,CAAnB;AACzBN,EAAAA,YAAY,CAACM,GAAD,CAAZ,GAAoBC,kBAAMC,IAAN,CAAWH,QAAX,CAApB;AACA,SAAOL,YAAY,CAACM,GAAD,CAAnB;AACD;;AAEM,SAASG,eAAT,CAAyBC,OAAzB,EAAkC;AACvC,MAAIA,OAAO,IAAIT,QAAf,EAAyB,OAAOA,QAAQ,CAACS,OAAD,CAAf;;AADc,kBAEbR,OAAO,CAACQ,OAAD,CAFM;AAAA,MAE/BC,IAF+B,aAE/BA,IAF+B;AAAA,MAEzBC,OAFyB,aAEzBA,OAFyB,EAEI;;;AAC3CX,EAAAA,QAAQ,CAACS,OAAD,CAAR,GAAoBG,OAAO,CAACF,IAAD,EAAOC,OAAP,CAA3B;AACA,SAAOX,QAAQ,CAACS,OAAD,CAAf;AACD;;AAED,SAASG,OAAT,CAAiBF,IAAjB,EAAuBC,OAAvB,EAAgC;AAC9B,MAAIT,MAAM,CAACQ,IAAD,CAAV,EAAkB;AAChB,WAAOG,MAAM,CAACC,IAAP,CAAYZ,MAAM,CAACQ,IAAD,CAAlB,EAA0BK,IAA1B,CAA+B,UAAAC,EAAE;AAAA,aAAI,uBAAUL,OAAV,EAAmBK,EAAnB,CAAJ;AAAA,KAAjC,CAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF","sourcesContent":["import { dirname } from 'path';\nimport pkgUp from 'pkg-up';\nimport { satisfies } from 'semver';\n\nconst pkgPathCache = {};\nconst pkgCache = {};\nconst {\n  config: { 'es5-imcompatible-versions': config },\n} = require('es5-imcompatible-versions/package.json');\n\nexport function getPkgPath(filePath) {\n  const dir = dirname(filePath);\n  if (dir in pkgPathCache) return pkgPathCache[dir];\n  pkgPathCache[dir] = pkgUp.sync(filePath);\n  return pkgPathCache[dir];\n}\n\nexport function shouldTransform(pkgPath) {\n  if (pkgPath in pkgCache) return pkgCache[pkgPath];\n  const { name, version } = require(pkgPath) // eslint-disable-line\n  pkgCache[pkgPath] = isMatch(name, version);\n  return pkgCache[pkgPath];\n}\n\nfunction isMatch(name, version) {\n  if (config[name]) {\n    return Object.keys(config[name]).some(sv => satisfies(version, sv));\n  } else {\n    return false;\n  }\n}\n"],"file":"es5ImcompatibleVersions.js"}