{"version":3,"sources":["../../../src/utils/getConfig/svgr.js"],"names":["svgrLoader","source","callback","async","babel","options","readSvg","Promise","resolve","reject","fs","readFile","resourcePath","err","result","exportMatches","toString","match","previousExport","pBabelTransform","jsCode","babelrc","configFile","presets","require","modules","plugins","code","tranformSvg","svg","webpack","filePath","then"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAHA;AAKA,SAASA,UAAT,CAAoBC,MAApB,EAA4B;AAAA;;AAC1B,MAAMC,QAAQ,GAAG,KAAKC,KAAL,EAAjB;;AAD0B,aAEW,6BAAW,IAAX,KAAoB,EAF/B;AAAA,wBAElBC,KAFkB;AAAA,MAElBA,KAFkB,2BAEV,IAFU;AAAA,MAEDC,OAFC;;AAI1B,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,MAAA,KAAI,CAACC,EAAL,CAAQC,QAAR,CAAiB,KAAI,CAACC,YAAtB,EAAoC,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACnD,YAAID,GAAJ,EAASJ,MAAM,CAACI,GAAD,CAAN;AACTL,QAAAA,OAAO,CAACM,MAAD,CAAP;AACD,OAHD;AAID,KALM,CAAP;AAMD,GAPD;;AASA,MAAMC,aAAa,GAAGd,MAAM,CAACe,QAAP,CAAgB,OAAhB,EAAyBC,KAAzB,CAA+B,4BAA/B,CAAtB;AACA,MAAMC,cAAc,GAAGH,aAAa,GAAGA,aAAa,CAAC,CAAD,CAAhB,GAAsB,IAA1D;;AAEA,MAAMI,eAAe;AAAA,8FAAG,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,+CACf,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,qCACEW,MADF,EAEE;AACEC,kBAAAA,OAAO,EAAE,KADX;AAEE;AACA;AACAC,kBAAAA,UAAU,EAAE,KAJd;AAKEC,kBAAAA,OAAO,EAAE,CACPC,OAAO,CAAChB,OAAR,CAAgB,qBAAhB,CADO,EAEP,CAACgB,OAAO,CAAChB,OAAR,CAAgB,mBAAhB,CAAD,EAAuC;AAAEiB,oBAAAA,OAAO,EAAE;AAAX,mBAAvC,CAFO,CALX;AASEC,kBAAAA,OAAO,EAAE,CAACF,OAAO,CAAChB,OAAR,CAAgB,iDAAhB,CAAD;AATX,iBAFF,EAaE,UAACK,GAAD,EAAMC,MAAN,EAAiB;AACf,sBAAID,GAAJ,EAASJ,MAAM,CAACI,GAAD,CAAN,CAAT,KACKL,OAAO,CAACM,MAAM,CAACa,IAAR,CAAP;AACN,iBAhBH;AAkBD,eAnBM,CADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfR,eAAe;AAAA;AAAA;AAAA,KAArB;;AAuBA,MAAMS,WAAW,GAAG,SAAdA,WAAc,CAAAC,GAAG,EAAI;AACzB,WAAO,uBAAQA,GAAR,EAAaxB,OAAb,EAAsB;AAC3ByB,MAAAA,OAAO,EAAE;AAAEZ,QAAAA,cAAc,EAAdA;AAAF,OADkB;AAE3Ba,MAAAA,QAAQ,EAAE,KAAI,CAACnB;AAFY,KAAtB,EAIJoB,IAJI,CAIC,UAAAZ,MAAM;AAAA,aAAKhB,KAAK,GAAGe,eAAe,CAACC,MAAD,CAAlB,GAA6BA,MAAvC;AAAA,KAJP,EAKJY,IALI,CAKC,UAAAlB,MAAM;AAAA,aAAIZ,QAAQ,CAAC,IAAD,EAAOY,MAAP,CAAZ;AAAA,KALP,WAME,UAAAD,GAAG;AAAA,aAAIX,QAAQ,CAACW,GAAD,CAAZ;AAAA,KANL,CAAP;AAOD,GARD;;AAUA,MAAIE,aAAJ,EAAmB;AACjBT,IAAAA,OAAO,GAAG0B,IAAV,CAAeJ,WAAf;AACD,GAFD,MAEO;AACLA,IAAAA,WAAW,CAAC3B,MAAD,CAAX;AACD;AACF;;eAEcD,U","sourcesContent":["// ref: https://github.com/smooth-code/svgr/blob/master/packages/webpack/src/index.js\nimport { getOptions } from 'loader-utils';\nimport { transform as babelTransform } from '@babel/core';\nimport convert from '@svgr/core';\n\nfunction svgrLoader(source) {\n  const callback = this.async();\n  const { babel = true, ...options } = getOptions(this) || {};\n\n  const readSvg = () => {\n    return new Promise((resolve, reject) => {\n      this.fs.readFile(this.resourcePath, (err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  };\n\n  const exportMatches = source.toString('utf-8').match(/^module.exports\\s*=\\s*(.*)/);\n  const previousExport = exportMatches ? exportMatches[1] : null;\n\n  const pBabelTransform = async jsCode => {\n    return new Promise((resolve, reject) => {\n      babelTransform(\n        jsCode,\n        {\n          babelrc: false,\n          // Unless having this, babel will merge the config with global 'babel.config.js'\n          // which may causes some problems such as using react-hot-loader/babel in babel.config.js\n          configFile: false,\n          presets: [\n            require.resolve('@babel/preset-react'),\n            [require.resolve('@babel/preset-env'), { modules: false }],\n          ],\n          plugins: [require.resolve('@babel/plugin-transform-react-constant-elements')],\n        },\n        (err, result) => {\n          if (err) reject(err);\n          else resolve(result.code);\n        },\n      );\n    });\n  };\n\n  const tranformSvg = svg => {\n    return convert(svg, options, {\n      webpack: { previousExport },\n      filePath: this.resourcePath,\n    })\n      .then(jsCode => (babel ? pBabelTransform(jsCode) : jsCode))\n      .then(result => callback(null, result))\n      .catch(err => callback(err));\n  };\n\n  if (exportMatches) {\n    readSvg().then(tranformSvg);\n  } else {\n    tranformSvg(source);\n  }\n}\n\nexport default svgrLoader;\n"],"file":"svgr.js"}