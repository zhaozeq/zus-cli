{"version":3,"sources":["../src/dev.js"],"names":["debug","require","runDev","opts","cwd","process","entry","babel","__dirname","paths","config","returnedWatchConfig","configObj","watch","JSON","stringify","e","console","error","chalk","red","message","on","event","path","webpackConfig","proxy","beforeServer","devServer","env","MOCK","applyMock","log","afterServer","openBrowser","onCompileDone"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AAMA;;AACA;;AACA;;AACA;;AAXA;AAIA;AACA;AACA;AAOA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,SAAjB,CAAd;;AAEe,SAASC,MAAT,GAA2B;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AAAA,kBACDA,IADC,CAChCC,GADgC;AAAA,MAChCA,GADgC,0BAC1BC,OAAO,CAACD,GAAR,EAD0B;AAAA,MACXE,KADW,GACDH,IADC,CACXG,KADW;AAGxC,MAAMC,KAAK,GAAG,mBAAQC,SAAR,EAAmB,wBAAnB,CAAd;AACA,MAAMC,KAAK,GAAG,0BAASL,GAAT,CAAd,CAJwC,CAOxC;;AACA,iCAAcG,KAAd,EAAqB;AACnBH,IAAAA,GAAG,EAAHA;AADmB,GAArB,EARwC,CAYxC;;AACA,MAAIM,MAAM,GAAG,IAAb;AACA,MAAIC,mBAAmB,GAAG,IAA1B;;AACA,MAAI;AACF,QAAMC,SAAS,GAAG,+BAAc;AAAER,MAAAA,GAAG,EAAHA;AAAF,KAAd,CAAlB,CADE,CAEF;;AACAM,IAAAA,MAAM,GAAGE,SAAS,CAACF,MAAnB;AACAC,IAAAA,mBAAmB,GAAGC,SAAS,CAACC,KAAhC;AACAb,IAAAA,KAAK,wBAAiBc,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAjB,EAAL;AACD,GAND,CAME,OAAOM,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcC,kBAAMC,GAAN,CAAUJ,CAAC,CAACK,OAAZ,CAAd;AACArB,IAAAA,KAAK,CAAC,uDAAD,CAAL,CAFU,CAIV;;AACA,uCAAesB,EAAf,CAAkB,KAAlB,EAAyB,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACxCxB,MAAAA,KAAK,YAAKuB,KAAL,eAAeC,IAAf,0BAAL;AACA;AACAtB,MAAAA,MAAM,CAACC,IAAD,CAAN;AACD,KAJD;AAKA;AACD,GAhCuC,CAkCxC;;;AACA,MAAMsB,aAAa,GAAG,kCAAiB;AACrCrB,IAAAA,GAAG,EAAHA,GADqC;AAErCM,IAAAA,MAAM,EAANA,MAFqC;AAGrCH,IAAAA,KAAK,EAALA,KAHqC;AAIrCE,IAAAA,KAAK,EAALA,KAJqC;AAKrCH,IAAAA,KAAK,EAALA;AALqC,GAAjB,CAAtB,CAnCwC,CA2CxC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,uBAAQ;AACNmB,IAAAA,aAAa,EAAbA,aADM;AAENC,IAAAA,KAAK,EAAEhB,MAAM,CAACgB,KAAP,IAAgB,EAFjB;AAGNC,IAAAA,YAHM,wBAGOC,SAHP,EAGkB;AACtB,UAAI;AACF,YAAIvB,OAAO,CAACwB,GAAR,CAAYC,IAAZ,KAAqB,IAAzB,EAA+B;AAC7B;AACA7B,UAAAA,OAAO,CAAC,cAAD,CAAP,CAAwB8B,SAAxB,CAAkCH,SAAlC;AACD;AACF,OALD,CAKE,OAAOZ,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACe,GAAR,CAAYhB,CAAZ;AACD;AACF,KAZK;AAaNiB,IAAAA,WAbM,uBAaML,SAbN,EAaiB;AACrBjB,MAAAA,mBAAmB,CAACiB,SAAD,CAAnB;AACD,KAfK;AAgBNM,IAAAA,WAAW,EAAE,IAhBP;AAiBNC,IAAAA,aAjBM,2BAiBU,CACd;AACD;AAnBK,GAAR;AAqBD","sourcesContent":["import { resolve } from 'path';\n// import assert from 'assert'\nimport chalk from 'chalk';\nimport webpack from './utils/webpack/dev';\n\n// 用于上报webpack各阶段的耗时信息。\n// import BuildStatistics from 'build-statistics-webpack-plugin'\n// import BigBrother from 'bigbrother-webpack-plugin'\n\nimport getUserConfig, { watchConfigs, unwatchConfigs } from './utils/getConfig/getUserConfig';\nimport getWebpackConfig from './utils/getWebpackConfig';\nimport getPaths from './utils/common/getPaths';\nimport registerBabel from './utils/babel/registerBabel';\n\nconst debug = require('debug')('zus:dev');\n\nexport default function runDev(opts = {}) {\n  const { cwd = process.cwd(), entry } = opts;\n\n  const babel = resolve(__dirname, './utils/babel/babel.js');\n  const paths = getPaths(cwd);\n\n  \n  // register babel for config files\n  registerBabel(babel, {\n    cwd,\n  });\n\n  // get user config\n  let config = null;\n  let returnedWatchConfig = null;\n  try {\n    const configObj = getUserConfig({ cwd });\n    // eslint-disable-next-line prefer-destructuring\n    config = configObj.config;\n    returnedWatchConfig = configObj.watch;\n    debug(`user config: ${JSON.stringify(config)}`);\n  } catch (e) {\n    console.error(chalk.red(e.message));\n    debug('Get .webpackrc config failed, watch config and reload');\n\n    // 监听配置项变更，然后重新执行 dev 逻辑\n    watchConfigs().on('all', (event, path) => {\n      debug(`[${event}] ${path}, unwatch and reload`);\n      unwatchConfigs();\n      runDev(opts);\n    });\n    return;\n  }\n\n  // get webpack config\n  const webpackConfig = getWebpackConfig({\n    cwd,\n    config,\n    babel,\n    paths,\n    entry,\n  });\n\n  // const stagesPath = join(\n  //   __dirname,\n  //   '../.run/build-statistics/compilation.json'\n  // )\n\n  // const zusPkg from join(__dirname, '../package.json'))\n  // webpackConfig.plugins.push(\n  //   new BuildStatistics({\n  //     path: stagesPath\n  //   }),\n  //   new BigBrother({\n  //     cwd,\n  //     tool: {\n  //       name: 'zus',\n  //       version: zusPkg.version,\n  //       stagesPath\n  //     }\n  //   })\n  // )\n  webpack({\n    webpackConfig,\n    proxy: config.proxy || {},\n    beforeServer(devServer) {\n      try {\n        if (process.env.MOCK === 'on') {\n          // eslint-disable-next-line global-require\n          require('./utils/mock').applyMock(devServer);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    afterServer(devServer) {\n      returnedWatchConfig(devServer);\n    },\n    openBrowser: true,\n    onCompileDone() {\n      // console.log(webpackConfig, 'webpackConfig');\n    },\n  });\n}\n"],"file":"dev.js"}