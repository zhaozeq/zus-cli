{"version":3,"sources":["../../../src/scripts/init/writeToPkg.js"],"names":["cwdPath","process","cwd","endingText","projectName","dest","module","exports","data","name","npm","targetFile","autoDownload","loading","start","err","stdout","stderr","stop","console","error","log","chalk","gray","green","red"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,EAAhB,C,CAA+B;;AAE/B,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD,EAAcC,IAAd;AAAA,sCACAD,WADA,iBACkBC,IADlB,6PAOZD,WAPY;AAAA,CAAnB;;AAYAE,MAAM,CAACC,OAAP;AAAA,2FAAiB,iBAAOC,IAAP,EAAaC,IAAb,EAAmBC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACTR,YAAAA,GADS,aACAF,OADA,cACWS,IADX;AAETE,YAAAA,UAFS,aAEOX,OAFP,cAEkBS,IAFlB;;AAGf,gBAAI;AACF,oDAAWE,UAAX,EAAuBH,IAAvB;AACA;;AACA,kBAAIA,IAAI,CAACI,YAAT,EAAuB;AACrB;AACMC,gBAAAA,OAFe,GAEL,qBAAK,WAAL,CAFK;AAGrBA,gBAAAA,OAAO,CAACC,KAAR;AACA,mDAAQJ,GAAR,eAAuB;AAAER,kBAAAA,GAAG,EAAHA;AAAF,iBAAvB,EAAgC,UAACa,GAAD,EAAMC,MAAN,EAAcC,MAAd,EAAyB;AACvDJ,kBAAAA,OAAO,CAACK,IAAR;;AACA,sBAAIH,GAAJ,EAAS;AACPI,oBAAAA,OAAO,CAACC,KAAR,CAAcL,GAAd;AACA;AACD;;AACDI,kBAAAA,OAAO,CAACE,GAAR,WAAeC,kBAAMC,IAAN,CAAWN,MAAX,CAAf;AACAE,kBAAAA,OAAO,CAACE,GAAR,WAAeC,kBAAME,KAAN,CAAYrB,UAAU,CAACM,IAAD,EAAOP,GAAP,CAAtB,CAAf;AACD,iBARD;AASD,eAbD,MAaO,IAAIM,IAAI,CAACI,YAAL,KAAsB,KAA1B,EAAiC;AACtCO,gBAAAA,OAAO,CAACE,GAAR,CAAYC,kBAAMC,IAAN,CAAW,wBAAX,CAAZ;AACAJ,gBAAAA,OAAO,CAACE,GAAR,CAAYC,kBAAMC,IAAN,wBAA2Bb,GAA3B,oBAAZ;AACD,eAHM,MAGA;AACLS,gBAAAA,OAAO,CAACE,GAAR,CAAYC,kBAAMC,IAAN,CAAW,wBAAX,CAAZ;AACAJ,gBAAAA,OAAO,CAACE,GAAR,CAAYC,kBAAMC,IAAN,CAAW,oBAAX,CAAZ;AACD;AACF,aAvBD,CAuBE,OAAOR,GAAP,EAAY;AACZI,cAAAA,OAAO,CAACE,GAAR,CAAYC,kBAAMG,GAAN,CAAU,wBAAV,CAAZ;AACD;;AA5Bc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { exec } from 'child_process';\nimport chalk from 'chalk';\nimport spin from 'ora';\nimport solveFiles from './solveConfigIntoFiles';\nimport clearConsole from '../../utils/common/clearConsole';\n\nconst cwdPath = process.cwd(); //需要获得命令执行的位置\n\nconst endingText = (projectName, dest) => `\nSuccess! Created ${projectName} at ${dest}.\nInside that directory, you can run several commands:\n  * npm run dev: Starts the development server.\n  * npm run build: Bundles the app into dist for production.\n  * npm run test: Run test.\nWe suggest that you begin by typing:\n  cd ${projectName}\n  npm run dev\nHappy hacking!\n`;\n\nmodule.exports = async (data, name, npm) => {\n  const cwd = `${cwdPath}/${name}`;\n  const targetFile = `${cwdPath}/${name}/package.json`;\n  try {\n    solveFiles(targetFile, data);\n    clearConsole();\n    if (data.autoDownload) {\n      // 自动下载\n      const loading = spin('开始下载依赖...');\n      loading.start();\n      exec(`${npm} install`, { cwd }, (err, stdout, stderr) => {\n        loading.stop();\n        if (err) {\n          console.error(err);\n          return;\n        }\n        console.log(`${chalk.gray(stderr)}`);\n        console.log(`${chalk.green(endingText(name, cwd))}`);\n      });\n    } else if (data.autoDownload === false) {\n      console.log(chalk.gray('\\n  初始化完成！程序员，开始你的表演吧！'));\n      console.log(chalk.gray(`  start with ${npm} install... \\n`));\n    } else {\n      console.log(chalk.gray('\\n  初始化完成！程序员，开始你的表演吧！'));\n      console.log(chalk.gray('  温馨提示：您还未安装npm!\\n'));\n    }\n  } catch (err) {\n    console.log(chalk.red(' package.json 文件损坏，请重试'));\n  }\n};\n"],"file":"writeToPkg.js"}