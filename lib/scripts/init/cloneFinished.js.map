{"version":3,"sources":["../../../src/scripts/init/cloneFinished.js"],"names":["cwdPath","process","cwd","changeDefault","name","author","Object","prototype","toString","call","PACKAGE_LIST","forEach","item","findNpm","npms","platform","i","length","which","sync","nothrow","module","exports","proName","targetFile","defaultName","npm","pop","inquirer","prompt","res","console","log","chalk","red","cloneFinished"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA,IAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,EAAhB,C,CAA+B;;AAC/B,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,MAAP,EAAkB;AACtC,MAAIC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BC,yBAA/B,MAAiD,gBAArD,EAAuE;AACrEA,8BAAaC,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAC3B,UAAIA,IAAI,CAACR,IAAL,KAAc,MAAlB,EAA0B;AACxBQ,QAAAA,IAAI,WAAJ,GAAeR,IAAf;AACD,OAFD,MAEO,IAAIQ,IAAI,CAACR,IAAL,KAAc,QAAlB,EAA4B;AACjCQ,QAAAA,IAAI,WAAJ,GAAeP,MAAf;AACD;AACF,KAND;AAOD;AACF,CAVD;;AAYA,SAASQ,OAAT,GAAmB;AACjB,MAAMC,IAAI,GAAGb,OAAO,CAACc,QAAR,KAAqB,OAArB,GAA+B,CAAC,UAAD,EAAa,UAAb,EAAyB,SAAzB,CAA/B,GAAqE,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAAlF;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvCE,sBAAMC,IAAN,CAAWL,IAAI,CAACE,CAAD,CAAf,EAAoB;AAAEI,MAAAA,OAAO,EAAE;AAAX,KAApB;;AACA,WAAON,IAAI,CAACE,CAAD,CAAX;AACD;;AACD,SAAO,KAAP;AACD;;AAEDK,MAAM,CAACC,OAAP;AAAA,qGAAiB,iBAA6BC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,YAAAA,UADS,aACOxB,OADP,cACkBuB,OADlB;;AAAA,iBAEX,oBAAWC,UAAX,CAFW;AAAA;AAAA;AAAA;;AAGPC,YAAAA,WAHO,GAGO,0BAHP;AAIPC,YAAAA,GAJO,GAIDb,OAAO,EAJN;AAKb,gBAAI,CAACa,GAAL,EAAUhB,0BAAaiB,GAAb;AACVxB,YAAAA,aAAa,CAACoB,OAAD,EAAUE,WAAV,CAAb;AANa;AAAA,mBAOKG,qBAASC,MAAT,CAAgBnB,yBAAhB,CAPL;;AAAA;AAOPoB,YAAAA,GAPO;AAQb,wCAAMA,GAAN,EAAWP,OAAX,EAAoBG,GAApB;AARa;AAAA;;AAAA;AAUbK,YAAAA,OAAO,CAACC,GAAR,aAAiBC,kBAAMC,GAAN,CAAU,gBAAV,CAAjB;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA,WAAgCC,aAAhC;AAAA;AAAA;;AAAA,SAAgCA,aAAhC;AAAA","sourcesContent":["import chalk from 'chalk';\nimport { existsSync } from 'fs';\nimport inquirer from 'inquirer';\nimport which from 'which';\n\nimport getUser from './getUser';\nimport write from './writeToPkg';\nimport { PACKAGE_LIST } from '../../doc/interaction';\nconst cwdPath = process.cwd(); //需要获得命令执行的位置\nconst changeDefault = (name, author) => {\n  if (Object.prototype.toString.call(PACKAGE_LIST) === '[object Array]') {\n    PACKAGE_LIST.forEach(item => {\n      if (item.name === 'name') {\n        item.default = name;\n      } else if (item.name === 'author') {\n        item.default = author;\n      }\n    });\n  }\n};\n\nfunction findNpm() {\n  const npms = process.platform === 'win32' ? ['tnpm.cmd', 'cnpm.cmd', 'npm.cmd'] : ['tnpm', 'cnpm', 'npm'];\n  for (let i = 0; i < npms.length; i += 1) {\n    which.sync(npms[i], { nothrow: true });\n    return npms[i];\n  }\n  return false;\n}\n\nmodule.exports = async function cloneFinished(proName) {\n  const targetFile = `${cwdPath}/${proName}/package.json`;\n  if (existsSync(targetFile)) {\n    const defaultName = getUser();\n    const npm = findNpm();\n    if (!npm) PACKAGE_LIST.pop();\n    changeDefault(proName, defaultName);\n    const res = await inquirer.prompt(PACKAGE_LIST);\n    write(res, proName, npm);\n  } else {\n    console.log(`  ${chalk.red('模板已损坏，请联系管理员解决')}\n    `);\n  }\n};\n"],"file":"cloneFinished.js"}